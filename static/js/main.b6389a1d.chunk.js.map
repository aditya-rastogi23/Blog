{"version":3,"sources":["Components/UI/Container.tsx","Components/UI/FlexCentralWrapper.tsx","Components/UI/Title.tsx","Components/UI/Content.tsx","Components/UI/ExternalLink.tsx","Components/About/index.tsx","Assets/constants/TSReact/Tsx.png","Assets/constants/TSReact/css.png","Assets/constants/index.ts","Assets/constants/TSReact/index.ts","Assets/constants/ToastToNITK/index.ts","Components/UI/Image.tsx","Components/Article/index.tsx","Components/Home/TabbedLayout/index.tsx","Components/UI/Button.tsx","Assets/fonts/STJEDISE.TTF","Assets/theme.tsx","Components/Home/TabbedLayout/TabbedButton.tsx","Components/Home/CardList/Card.tsx","Components/Home/CardList/index.tsx","Components/Home/index.tsx","Components/UI/Navbar/StyledNav.tsx","Components/UI/Navbar/index.tsx","Components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["styled","div","FlexCentralWrapper","isRow","gap","isStretch","basis","titleStyles","css","StyledH1","h1","StyledH2","h2","StyledH3","h3","StyledH4","h4","StyledH5","h5","StyledH6","h6","Title","children","headerType","Content","p","lowHeight","ExtLink","a","isInline","ExternalLink","url","href","target","rel","iconsComponents","icon","Github","link","LinkedIn","Gmail","map","IconComponent","About","Container","Articles","contents","content","contentType","title","textBefore","textAfter","cardData","description","image","logo","isTech","Image","img","Article","props","useState","ArticleId","setArticleId","useEffect","Number","match","params","id","mapper","text","contentStruct","linkText","src","alt","imgStruct","linkStruct","contentMapping","undefined","TabbedButtonLayout","Button","pre","primary","secondary","colorTheme","theme","light","dark","GlobalStyle","createGlobalStyle","PrimaryFont","themeSelected","TabbedButton","isSelected","StyledCard","color","Card","useContext","ThemeContext","mode","to","filterer","cardIsTech","CardList","data","filter","item","card","CardData","idx","Home","setTech","onClick","StyledNav","Navbar","themeHandler","App","setTheme","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6389a1d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.div`\n    width: 80%;\n    margin-inline: auto;\n    @media (max-width: 768px) {\n        width: 95%;\n    }\n    margin-bottom: 5%;\n`;\n","import styled from \"styled-components\";\n\ninterface Props {\n    isRow?: boolean;\n    basis?: string;\n    isStretch?: boolean;\n    gap?: string;\n    width?: string;\n}\nconst FlexCentralWrapper = styled.div<Props>`\n    display: flex;\n    flex-direction: ${({ isRow }) => (isRow ? \"row\" : \"column\")};\n    gap: ${({ gap }) => gap || \"2em\"};\n    align-items: ${({ isStretch }) => (isStretch ? \"stretch\" : \"center\")};\n    justify-content: center;\n    flex-basis: ${({ basis }) => basis || null};\n    flex-wrap: ${({ basis }) => (basis ? \"wrap\" : null)};\n    margin-bottom: 5%;\n    > * {\n        flex-basis: 100%;\n    }\n`;\nexport default FlexCentralWrapper;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\ninterface Props {\n    headerType?: number;\n}\nconst titleStyles = css`\n    text-align: center;\n    margin: 1em;\n`;\nconst StyledH1 = styled.h1`\n    ${titleStyles}\n`;\nconst StyledH2 = styled.h2`\n    ${titleStyles}\n`;\nconst StyledH3 = styled.h3`\n    ${titleStyles}\n`;\nconst StyledH4 = styled.h4`\n    ${titleStyles}\n`;\nconst StyledH5 = styled.h5`\n    ${titleStyles}\n`;\nconst StyledH6 = styled.h6`\n    ${titleStyles}\n`;\nconst defaultHeader = 2;\nconst AdjustOffset = 1;\nconst Title: React.FC<Props> = ({ children, headerType = defaultHeader }) => {\n    const headerSwitch = [\n        <StyledH1 key={1}>{children}</StyledH1>,\n        <StyledH2 key={2}>{children}</StyledH2>,\n        <StyledH3 key={3}>{children}</StyledH3>,\n        <StyledH4 key={4}>{children}</StyledH4>,\n        <StyledH5 key={5}>{children}</StyledH5>,\n        <StyledH6 key={6}>{children}</StyledH6>,\n    ];\n    return headerSwitch[headerType - AdjustOffset];\n};\nexport default Title;\n","import styled from \"styled-components\";\n\ninterface Props {\n    lowHeight?: boolean;\n}\n\nexport const Content = styled.p<Props>`\n    line-height: ${({ lowHeight }) => (lowHeight ? \"1.5\" : \"2.5\")};\n    @media (max-width: 768px) {\n        line-height: 1.5;\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n    url?: string;\n    isInline?: boolean;\n}\n\nconst ExtLink = styled.a<{ isInline?: boolean }>`\n    margin-right: ${({ isInline }) => (isInline ? \"0\" : \"2%\")};\n    :hover {\n        color: red;\n    }\n`;\n\nconst ExternalLink: React.FC<Props> = ({\n    url = \"\",\n    children,\n    isInline = false,\n}) => {\n    return (\n        <ExtLink\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            isInline={isInline}\n        >\n            {children}\n        </ExtLink>\n    );\n};\nexport default ExternalLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Github } from \"@styled-icons/simple-icons/Github\";\nimport { Gmail } from \"@styled-icons/simple-icons/Gmail\";\nimport { Linkedin as LinkedIn } from \"@styled-icons/simple-icons/Linkedin\";\n\nimport Container from \"../UI/Container\";\nimport FlexCentralWrapper from \"../UI/FlexCentralWrapper\";\nimport Title from \"../UI/Title\";\nimport { Content } from \"../UI/Content\";\nimport ExternalLink from \"../UI/ExternalLink\";\n\nconst iconsArray = [\n    { icon: Github, link: \"https://github.com/aditya-rastogi23\" },\n    {\n        icon: LinkedIn,\n        link: \"https://www.linkedin.com/in/aditya-rastogi-33a42916a/\",\n    },\n    { icon: Gmail, link: \"mailto:adit.rastogi2014@gmail.com\" },\n];\n\nconst iconsComponents = iconsArray.map(({ icon, link }) => {\n    const IconComponent = styled(icon)`\n        width: 1.5em;\n        height: 1.5em;\n    `;\n    return (\n        <ExternalLink url={link} key={link}>\n            <IconComponent />\n        </ExternalLink>\n    );\n});\n\nconst About: React.FC = () => {\n    return (\n        <FlexCentralWrapper gap=\"0.5em\">\n            <Title>About The Blog writer</Title>\n            <Title headerType={4}>\n                (not narcissistic enough to call myself an author just yet)\n            </Title>\n            <p>Quote? Inspiration? Inspirational Quote?</p>\n            <pre>Coding, football, writing, Star wars.</pre>\n            <Container>\n                <FlexCentralWrapper>\n                    <Content>\n                        Honestly, the four words above kind of summarize my\n                        interests. This blog over the days is going to be home\n                        to my thoughts, my works and in general me rambling. If\n                        you think that interests you, for whatever godforsaken\n                        reason, stay tuned cos ramble I will.\n                    </Content>\n                    <p> If you wanna know more about me, contact me here:</p>\n                </FlexCentralWrapper>\n            </Container>\n            <FlexCentralWrapper isRow>{iconsComponents}</FlexCentralWrapper>\n        </FlexCentralWrapper>\n    );\n};\nexport default About;\n","export default __webpack_public_path__ + \"static/media/Tsx.1e41f584.png\";","export default __webpack_public_path__ + \"static/media/css.ac0e06fd.png\";","import { contents } from \"./TSReact\";\nimport { contents as personalContent } from \"./ToastToNITK\";\n\nexport const title = \"Old Ben's Log\";\n\ninterface CardData {\n    title: string;\n    description: string;\n    image: string;\n    isTech: boolean;\n}\n\ninterface Content {\n    contentType: \"text\" | \"link\" | \"image\" | \"link and text\";\n    content: string;\n    title?: string;\n    textAfter?: string;\n    textBefore?: string;\n}\n\nexport interface ArticleInterface {\n    contents: Content[];\n    cardData: CardData;\n}\n\nexport const Articles: ArticleInterface[] = [contents, personalContent];\n","import { ArticleInterface } from \"../index\";\nimport logo from \"./Tsx.png\";\nimport css from \"./css.png\";\n\nexport const contents: ArticleInterface = {\n    contents: [\n        {\n            content: `1. HTML/basic CSS: I did it back in 5th grade, completely forgot, and worked on a small site(engineer NITK) to get back into practice. \n            HTML/CSS is the fundamental structure and design side of the site and is thus, necessary for any beginner. The main advantage of web development is that no tool is needed(I would advise quite a few.\n            Not necessary but helpful) for building even complex websites. Any text editor will suffice. Resources to learn more:\n        `,\n            contentType: \"text\",\n        },\n        {\n            content:\n                \"https://www.freecodecamp.org/learn/responsive-web-design/\",\n            contentType: \"link\",\n            title: \"interactive exercises\",\n        },\n        {\n            content:\n                \"https://youtube.com/playlist?list=PLbpB1OSSmKmpNLeviVDLJjjnAqJ_phE7v\",\n            contentType: \"link\",\n            title: \"tutorial series\",\n        },\n        {\n            content: `2. JavaScript(JS) + React: I was not interested in web development at first.\n                I found basic HTML/CSS lacking where standard programming languages succeeded\n                (probably cos they aren't programming languages).\n                After I heard about react and started to work on it,\n                I saw how much better and more aligned it is with conventional programming language. \n                (I sincerely apologize for calling JS conventional) At the time, I was a complete beginner at JS.\n                Now I am a little less of a beginner\n                (anyone who calls themselves an expert at JS either wrote it or is lying).\n                JS is probably the most challenging of languages to pick up and highly annoying,\n                with the weirdest of bugs and even a === symbol.\n                Yet once you understand the ideology, well, it doesn't make much difference,\n                but at least you'll be less annoyed and more used to it by then.\n                React is a library at helps you write out the structure and the logic all\n                at once and bind them together much better than conventional HTML could do.`,\n            contentType: \"text\",\n        },\n        {\n            content:\n                \"https://www.freecodecamp.org/news/the-difference-between-a-framework-and-a-library-bd133054023f/\",\n            title: \"difference between libraries and frameworks\",\n            contentType: \"link\",\n        },\n        {\n            contentType: \"text\",\n            content: `With reusable, modular components, it becomes much more organized and structured, \n                making it easier to plan and better create more complex sites and follow the DRY(don't repeat yourself) concepts much better. \n                With the knowledge of both JS and React, my web development and design interests were sparked again. \n                This lead me to explore more and try building projects that people would actually use. Few of them can be checked out here:`,\n        },\n        {\n            content: \"https://iste.nitk.ac.in/\",\n            title: \"ISTE NITK\",\n            contentType: \"link\",\n        },\n        {\n            content: \"https://toastmasters-nitk.github.io/WebsiteReact/\",\n            title: \"NITK Toastmasters\",\n            contentType: \"link\",\n        },\n        {\n            contentType: \"text\",\n            content: `These were built with the help of several people, all much like me, relatively new to react. \n            That helped me realize the importance of having a community around you that is supportive and helps with exploration and learning all at once. \n            Working in a group of people also leads to issues that won't arise while being helpful. \n            These issues also lead to the learning opportunities like using and configuring auto formatters, git, or similar version control systems. \n            What better way to learn them with an actual project that goes live. Now that I was good enough to organize and structure my websites, \n            I wanted to explore more on making them look better, which led to the then dreaded and now well-loved, modern CSS.`,\n        },\n        {\n            contentType: \"link and text\",\n            content: \"https://developer.mozilla.org/en-US/docs/Glossary/CDN\",\n            textBefore: `3. Modern CSS: Learning Modern CSS was personally a horrible experience.\n            I took many bad tutorials, used bootstrap when I was learning to code out CSS(never ever recommended), and tried to avoid the surprisingly well-written`,\n            textAfter: \"Then I found a few YouTube channels:\",\n            title: \"Mozilla CDN documentation.\",\n        },\n        {\n            content: \"https://www.youtube.com/kevinpowell\",\n            title: \"Kevin Powell\",\n            contentType: \"link\",\n        },\n        {\n            content: \"https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw\",\n            title: \"Web Dev simplified\",\n            contentType: \"link\",\n        },\n        {\n            content: \"https://www.youtube.com/channel/UC-8QAzbLcRglXeN_MY9blyw\",\n            title: \"Ben Awad\",\n            contentType: \"link\",\n        },\n        {\n            contentType: \"text\",\n            content: `They made the experience much more rewarding and honestly made some sense out of weird and relatively scary properties\n            like flex-basis and how to create all sorts of odd layouts.`,\n        },\n        {\n            contentType: \"link and text\",\n            content: \"https://cssbattle.dev/\",\n            textBefore: `Learning about grid-template-areas was very surprising to me and new and, at the same time, helped fill my creative side. \n            I also ended up learning about masonry layouts and explored this fantastic site called`,\n            textAfter: `which was a fun and creative way to explore even more. \n            I am pretty horrible at design, and learning these concepts gives me access to better designs and an easier way to implement them. \n            I was usually poor at coming up with ideas for the same. I have to thank everyone who helped me design with an emphasis on the \n            person/people that sat with me and helped me create some of my best works ever by coming up with unique designs.`,\n            title: \"cssbattle\",\n        },\n        {\n            contentType: \"text\",\n            content: `4. Advanced React concepts and better configuration of utilities and tools: \n            After this, I started working on some sites with very flexible deadlines and came across even more channels that focus on web dev concepts.\n            This led me to explore and learn about hooks, read upon newer versions on react and the differences, routing, adding linters and formatters.\n            Adding newer concepts lead to smoother and optimized code, easier to debug, and taught me a lot more about JS as a whole.\n            These concepts also make you curious about the libraries themselves and how all of this works—leading to an abundance of\n            knowledge and a little bit of explanation of open source concepts. This was also the part where I went crazy exploring and customizing VS code.\n            Adding up around 60ish extensions, which varied from API fetching to adding a colorful fire over my cursor.\n            I even explored making my own extension and worked on it for a bit(when I finish up, there will be a writeup on it here),\n            which leads to good learning and exploration of an even deeper dive into coding and dev in general.\n            Around this time, I started reading medium articles on JS, and I even started following developers on Twitter to get a better idea of what's\n            new in the dev community. And honestly, it just feels great to see tweets like this one:`,\n        },\n        {\n            content: css,\n            contentType: \"image\",\n            title: \"Very comforting to know we’re all stupid together, and I’m not stupid alone.\",\n        },\n        {\n            content:\n                \"https://twitter.com/tucker_dev/status/1324167664344981504?s=20\",\n            contentType: \"link\",\n            title: \"Tweet link\",\n        },\n        {\n            contentType: \"text\",\n            content: `5. Styled-components(CSS-in-JS): I learned of styled-components about the same time \n                I heard of React. They seemed like a great idea, but I knew I had to work on developing more proficiency in CSS before I could even approach styled-components. \n                Once I built a few projects leveraging Modern CSS frameworks like materialize and concepts like grid/flexbox, \n                I felt that something was lacking. For example, I was working on a project where I had to dynamically pass a \n                value to multiply margin by(poorly organized list yes). Still, while learning and exploring this, I came across styled-components again and realized that if you're writing CSS in JS files itself, \n                you don't need to worry about sharing variables. This lead me back to styled-components and adding them slowly into code. \n                I realized the props and component structure works great for passing in values and leads to much cleaner and more manageable code \n                than writing CSS and using classNames, especially if we're using frameworks for CSS or even a preprocessor.\n            `,\n        },\n        {\n            contentType: \"link\",\n            content: \"https://www.styled-components.com/\",\n            title: \"Styled Components\",\n        },\n        {\n            contentType: \"text\",\n            content: `6. Typescript: After doing a basic amount of work on this entire React stack, I wanted to explore a bit more. \n                While working on a project, I came across an error where a component was not rendering. I was fetching data from cookies and then passing that as a prop. Everything seemed fine, and then I realized that the prop was misspelled. \n                The prop was a critical one and caused the site to crash, no components being rendered, nothing shown in inspector. \n                I spent a frustratingly long amount of time and started searching for a better way to organize props.`,\n        },\n        {\n            contentType: \"text\",\n            content: `Then I came across PropTypes. PropTypes is a pretty popular NPM package that allows you to define the type of props, a default value, \n                which ones are necessary, and which ones are optional. I saw this and saw the syntax being similar to something I had seen before. Next, I came across a video that talked about typescript. Typescript supports everything that PropTypes can but does it one better where \n                it allows you to add constraints and only allow specific values. TS supports this across the entire file not being limited to just props but also constants and any data types you define, comes with a linter for types(eslint-plugin, essentially), \n                and allows declaring custom modules using **.d.ts files.`,\n        },\n        {\n            contentType: \"text\",\n            content: `The best part is that it compiles into minified and obfuscated JS (minified-> variable names as short as they can be to reduce byte load on the server, obfuscated-> the code will be organized \n                in a manner that it doesn't make much sense) in the same way that React does for production-level code while being type friendly. \n                TS helps in catching more bugs for developers during dev time and adding no extra weight to the end result. This motivated me to learn more about the language, and the end result is this blog microsite that \n                I've coded out, entirely using TS, a much more pleasant experience than coding out in pure JS.`,\n        },\n        {\n            contentType: \"text\",\n            content: `PS: There are ways to migrate projects from JS to TS with useful guides. \n                One simple step is just to install the NPM packages necessary for TS and code out new files in TS while migrating the existing JS. \n                Since JS is a subset of TS, they work very well together.`,\n        },\n        {\n            contentType: \"link\",\n            content:\n                \"https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html\",\n            title: \"Migrating\",\n        },\n    ],\n    cardData: {\n        description: `\n            This is the journey of someone still exploring and \n            looking around for new ways to center a div\n            and how I reached where I am today.`,\n        image: logo,\n        isTech: true,\n        title: \"The six steps in my journey as a web developer\",\n    },\n};\n","import { ArticleInterface } from \"../index\";\n\nexport const contents: ArticleInterface = {\n    contents: [{ content: \"Hello\", contentType: \"text\" }],\n    cardData: {\n        description: \"This is the description\",\n        image: \"\",\n        isTech: false,\n        title: \"this is the personal Article title\",\n    },\n};\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n    max-width: 100%;\n    margin-inline: auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport ExternalLink from \"../UI/ExternalLink\";\nimport FlexCentralWrapper from \"../UI/FlexCentralWrapper\";\nimport Title from \"../UI/Title\";\nimport { Content } from \"../UI/Content\";\nimport { Articles } from \"../../Assets/constants/\";\nimport Container from \"../UI/Container\";\nimport { Image } from \"../UI/Image\";\ninterface MatchParams {\n    id: string;\n}\n\nconst Article: React.FC<RouteComponentProps<MatchParams>> = (props) => {\n    const defaultArrayId = 0;\n    const [ArticleId, setArticleId] = useState(defaultArrayId);\n\n    useEffect(() => {\n        setArticleId(Number(props.match.params.id));\n    });\n    const contentStruct = (text: string) => {\n        return <Content lowHeight>{text}</Content>;\n    };\n    const linkStruct = (url: string, title?: string) => {\n        return <ExternalLink url={url}>{title || \"Click here\"}</ExternalLink>;\n    };\n    const imgStruct = (src: string, title = \"testing\") => {\n        return (\n            <FlexCentralWrapper gap=\"0em\">\n                <Image src={src} alt={src} />\n                <Title headerType={5}>{title}</Title>\n            </FlexCentralWrapper>\n        );\n    };\n    const linkText = (\n        url: string,\n        textBefore?: string,\n        textAfter?: string,\n        linkText?: string\n    ) => {\n        return (\n            <Content lowHeight>\n                {textBefore}{\" \"}\n                <ExternalLink url={url} isInline>\n                    {linkText}\n                </ExternalLink>{\" \"}\n                {textAfter}\n            </Content>\n        );\n    };\n    const mapper = {\n        text: (text: string) => contentStruct(text),\n        \"link and text\": (\n            url: string,\n            textBefore?: string,\n            textAfter?: string,\n            title?: string\n        ) => linkText(url, textBefore, textAfter, title),\n        image: (src: string, title?: string) => imgStruct(src, title),\n        link: (url: string, title?: string) => linkStruct(url, title),\n    };\n    const contentMapping = Articles[ArticleId].contents.map(\n        ({\n            content,\n            contentType,\n            title = undefined,\n            textAfter = undefined,\n            textBefore = undefined,\n        }) => {\n            if (textAfter && title)\n                return mapper[contentType](\n                    content,\n                    textBefore,\n                    textAfter,\n                    title\n                );\n            if (title) return mapper[contentType](content, title);\n            return mapper[contentType](content);\n        }\n    );\n    const title = Articles[ArticleId].cardData.title;\n    return (\n        <Container>\n            <Title>{title}</Title>\n            {contentMapping}\n        </Container>\n    );\n};\nexport default Article;\n","import styled from \"styled-components\";\n\nexport const TabbedButtonLayout = styled.div`\n    margin: 1em auto;\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5em;\n`;\n","import styled from \"styled-components\";\n\nconst Button = styled.pre`\n    border: none;\n    outline: none;\n    padding: 1em;\n    :hover {\n        cursor: pointer;\n    }\n    text-align: center;\n`;\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/STJEDISE.ae4970bd.TTF\";","import { createGlobalStyle, css } from \"styled-components\";\nimport theme from \"styled-theming\";\n\nimport PrimaryFont from \"./fonts/STJEDISE.TTF\";\n\nexport const primary = \"#15f2fd\";\nexport const secondary = \"#000c33\";\n\nconst colorTheme = theme(\"mode\", {\n    light: css`\n        background-color: ${primary};\n        color: ${secondary};\n    `,\n    dark: css`\n        background-color: ${secondary};\n        color: ${primary};\n    `,\n});\nexport const GlobalStyle = createGlobalStyle`\n    @font-face {\n        font-family: primary;\n        src: url(${PrimaryFont});\n    }\n    *{\n        ${colorTheme};\n        font-family: primary;\n    }\n    body {\n        margin:0 5%;\n    }\n`;\n","import styled, { css } from \"styled-components\";\nimport theme from \"styled-theming\";\n\nimport Button from \"../../UI/Button\";\nimport { primary, secondary } from \"../../../Assets/theme\";\ninterface Props {\n    isSelected: boolean;\n}\nconst themeSelected = theme(\"mode\", {\n    light: css`\n        background-color: ${secondary};\n        color: ${primary};\n    `,\n    dark: css`\n        background-color: ${primary};\n        color: ${secondary};\n    `,\n});\nexport const TabbedButton = styled(Button)<Props>`\n    flex-grow: 1;\n    ${(props) => (props.isSelected ? themeSelected : null)};\n    border-radius: 10px;\n`;\n","import React, { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport Title from \"../../UI/Title\";\nimport { primary, secondary } from \"../../../Assets/theme\";\ninterface Props {\n    title: string;\n    description: string;\n    image: string;\n    id: number;\n}\ninterface PropsColor {\n    color: string;\n}\nconst StyledCard = styled.div<PropsColor>`\n    box-shadow: 0 0 0.25em 0.125em ${(props) => props.color};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 0em;\n    max-width: 20em;\n    min-height: 20em;\n    > * {\n        margin: 1em;\n        line-height: 1.1;\n    }\n    > img {\n        width: 90%;\n    }\n    p {\n        text-align: center;\n        line-height: 1.6;\n    }\n`;\n\nconst Card: React.FC<Props> = ({ title, description, image, id }) => {\n    const color =\n        useContext(ThemeContext).mode === \"dark\" ? primary : secondary;\n    return (\n        <StyledCard color={color}>\n            <img src={image} alt={title} />\n            <Title>{title}</Title>\n            <p>{description}</p>\n            <Link to={`/Article/${id}`}>View More!</Link>\n        </StyledCard>\n    );\n};\nexport default Card;\n","import React from \"react\";\n\nimport FlexCentralWrapper from \"../../UI/FlexCentralWrapper\";\nimport Card from \"./Card\";\n\ninterface CardData {\n    title: string;\n    description: string;\n    image: string;\n    isTech: boolean;\n    id: number;\n}\ninterface Props {\n    data: CardData[];\n    isTech: boolean;\n}\n\nconst filterer = (cardIsTech: boolean, isTech: boolean) => {\n    return isTech ? cardIsTech : !cardIsTech;\n};\n\nconst CardList: React.FC<Props> = ({ data, isTech }) => {\n    return (\n        <FlexCentralWrapper isStretch isRow basis=\"min(20em,80vw)\">\n            {data\n                .filter((item) =>\n                    isTech\n                        ? filterer(item.isTech, true)\n                        : filterer(item.isTech, false)\n                )\n                .map((card) => {\n                    const { title, description, image, id } = card;\n                    return (\n                        <Card\n                            key={id}\n                            id={id}\n                            title={title}\n                            description={description}\n                            image={image}\n                        />\n                    );\n                })}\n        </FlexCentralWrapper>\n    );\n};\nexport default CardList;\n","import React, { useState } from \"react\";\n\nimport { title } from \"../../Assets/constants\";\nimport { TabbedButtonLayout } from \"./TabbedLayout\";\nimport { TabbedButton } from \"./TabbedLayout/TabbedButton\";\nimport Title from \"../UI/Title\";\nimport CardList from \"./CardList\";\nimport FlexCentralWrapper from \"../UI/FlexCentralWrapper\";\nimport { Articles } from \"../../Assets/constants/\";\n\nconst CardData = Articles.map((Article, idx) => {\n    return {\n        ...Article.cardData,\n        id: idx,\n    };\n});\n\nconst Home: React.FC = () => {\n    const [isTech, setTech] = useState(true);\n\n    return (\n        <FlexCentralWrapper>\n            <Title headerType={1}>{title}</Title>\n            <TabbedButtonLayout>\n                <TabbedButton onClick={() => setTech(true)} isSelected={isTech}>\n                    Tech\n                </TabbedButton>\n                <TabbedButton\n                    onClick={() => setTech(false)}\n                    isSelected={!isTech}\n                >\n                    Personal\n                </TabbedButton>\n            </TabbedButtonLayout>\n            <CardList data={CardData} isTech={isTech} />\n        </FlexCentralWrapper>\n    );\n};\nexport default Home;\n","import styled from \"styled-components\";\nimport { primary } from \"../../../Assets/theme\";\n\nconst StyledNav = styled.div`\n    margin-top: 0;\n    min-height: 10vmin;\n    box-shadow: 0 0 8px 1px ${primary};\n    position: sticky;\n    display: flex;\n    justify-content: center;\n    top: 0;\n    ul {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-evenly;\n        align-items: center;\n        list-style-type: none;\n        flex-grow: 1;\n        @media (max-width: 768px) {\n            flex-direction: column;\n            padding: 0;\n        }\n    }\n    ul * {\n        margin: auto;\n        text-decoration: none;\n    }\n`;\nexport default StyledNav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"../Button\";\nimport StyledNav from \"./StyledNav\";\n\ninterface Props {\n    themeHandler: () => void;\n    theme: string;\n}\n\nconst Navbar: React.FC<Props> = ({ themeHandler, theme }) => {\n    return (\n        <StyledNav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Button onClick={() => themeHandler()}>{theme}</Button>\n                </li>\n                <li>\n                    <Link to=\"/About\">About</Link>\n                </li>\n            </ul>\n        </StyledNav>\n    );\n};\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport About from \"./About\";\nimport Article from \"./Article\";\nimport Home from \"./Home\";\nimport Navbar from \"./UI/Navbar\";\nimport Container from \"./UI/Container\";\nimport { GlobalStyle } from \"../Assets/theme\";\n\nconst App: React.FC = () => {\n    const [theme, setTheme] = useState(\"dark\");\n    return (\n        <ThemeProvider theme={{ mode: theme }}>\n            <GlobalStyle />\n            <HashRouter>\n                <Navbar\n                    themeHandler={() =>\n                        setTheme((theme) =>\n                            theme === \"dark\" ? \"light\" : \"dark\"\n                        )\n                    }\n                    theme={\n                        theme === \"dark\"\n                            ? \"Change to light theme, I'm a heathen\"\n                            : \"Aah!!! it burns, switch back\"\n                    }\n                />\n                <Container>\n                    <Switch>\n                        <Route exact path=\"/About\" component={About} />\n                        <Route exact path=\"/Article/:id\" component={Article} />\n                        <Route path=\"/\" component={Home} />\n                    </Switch>\n                </Container>\n            </HashRouter>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}